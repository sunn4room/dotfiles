add_path() {
	case ":$PATH:" in
		*":$1:"*) ;;
		*) export PATH="$1:$PATH" ;;
	esac
}

add_path "$HOME/.yarn/bin"
add_path "$HOME/.cargo/bin"
export EDITOR="nvim"
#export GTK_IM_MODULE=fcitx
#export QT_IM_MODULE=fcitx
#export XMODIFIERS=@im=fcitx
export QT_QPA_PLATFORMTHEME=qt5ct
export FZF_DEFAULT_OPTS='
--ansi
--algo=v1
--tiebreak=chunk,begin,length,index
--layout=reverse
--info=inline
--no-separator
--color=fg:white,hl:magenta,fg+:bright-white,bg+:-1,hl+:bright-magenta
--color=prompt:green,query:bright-white,info:cyan,pointer:bright-magenta,marker:magenta,header:blue,spinner:red
--bind="change:first,tab:down,btab:up"
'
export FZF_DEFAULT_COMMAND='
fd -H -L
--strip-cwd-prefix
--exclude={.git,.idea,.cache,.sass-cache,node_modules,.npm,build,target}
'
export PAGER="less"
export LESS="-R"
export GOPROXY="https://goproxy.cn,direct"

[[ $- != *i* ]] && return

# bash
set -o vi
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

# color
RED='\001\033[31m\002'
GREEN='\001\033[32m\002'
YELLOW='\001\033[33m\002'
BLUE='\001\033[34m\002'
MAGENTA='\001\033[35m\002'
CYAN='\001\033[36m\002'
WHITE='\001\033[37m\002'
GRAY='\001\033[90m\002'
RESET='\001\033[0m\002'
BOLD='\001\033[1m\002'
NEWLINE='\n'
HOLD='\001\002'

{{ if eq .chezmoi.username "sunny" -}}
# banner
printf "${GREEN}"
cat ~/.banner
printf "${RESET}"

{{ end -}}
# prompt
__prompt_start() {
	RETURN_CODE=$?
	printf "${HOLD}"
	printf "${BOLD}"
	printf "${GRAY}%s${NEWLINE}" '$'
	if test "${RETURN_CODE}" -ne 0; then
		printf "${BLUE}get ${RED}%s${NEWLINE}" "${RETURN_CODE}"
	fi
	printf "${NEWLINE}"
	printf "${HOLD}"
}
__prompt_cwd() {
	printf "${BLUE}cwd "
	if test -L "${PWD}"; then
		printf "${CYAN}"
	elif test "$(id -u)" -eq "$(stat -c %u "${PWD}")"; then
		printf "${GREEN}"
	elif test "$(id -g)" -eq "$(stat -c %g "${PWD}")"; then
		printf "${YELLOW}"
	else
		printf "${RED}"
	fi
	printf '%s' "$(dirs +0)"
}
__prompt_user() {
	printf " ${BLUE}usr "
	if test "$(id -u)" -eq 0; then
		printf "${RED}"
	else
		printf "${GREEN}"
	fi
	printf '%s' "${USER}"
}
__prompt_git() {
	if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
		printf " ${BLUE}git "
		GIT_BRANCH="$(git branch --show-current)"
		if test -z "$GIT_BRANCH"; then
			GIT_BRANCH="$(git rev-parse --short HEAD)"
		fi
		if test "$(git status -s | wc -l)" -eq 0; then
			printf "${GREEN}"
		else
			printf "${RED}"
		fi
		printf '%s' "${GIT_BRANCH}"
	fi
}
__prompt_env() {
	ENVS=""
	if test -n "$TMUX"; then
		ENVS="$ENVS,tmux:$(tmux display-message -p "#S")"
	fi
	if test -n "$CHEZMOI"; then
		ENVS="$ENVS,chezmoi"
	fi
	if test -n "$lf"; then
		ENVS="$ENVS,lf"
	fi
	if test -n "$GHPROXY"; then
		ENVS="$ENVS,ghproxy"
	fi
	if test -n "$ENVS"; then
		printf " ${BLUE}env ${MAGENTA}%s" "${ENVS:1}"
	fi
}
__prompt_end() {
	printf "${HOLD}"
	printf "${NEWLINE}${BLUE}run ${RESET}"
	printf "${HOLD}"
}
PS1='$(__prompt_start)$(__prompt_cwd)$(__prompt_user)$(__prompt_git)$(__prompt_env)$(__prompt_end)'

alias hm="chezmoi"
alias vim="nvim"
alias vi="nvim"
alias v="nvim"
alias fm="lf"
